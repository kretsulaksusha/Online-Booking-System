version: '3.8'

services:
  # ZooKeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

  # Hazelcast (force x86)
  hazelcast:
    image: hazelcast/hazelcast:5
    platform: linux/amd64
    ports:
      - "5701:5701"

  # Inventory Service (SQLite)
  inventory-service:
    build: ./inventory-service
    ports:
      - "8081:8081"
    volumes:
      - sqlite_data:/data
    environment:
      SPRING_DATASOURCE_URL: jdbc:sqlite:/data/app.db
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.sqlite.JDBC

  # Booking Service (SQLite + Kafka + Hazelcast)
  booking-service:
    build: ./booking-service
    depends_on:
      - kafka
      - hazelcast
    ports:
      - "8082:8082"
    volumes:
      - sqlite_data:/data
    environment:
      SPRING_DATASOURCE_URL: jdbc:sqlite:/data/app.db
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.sqlite.JDBC
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      HAZELCAST_CLUSTER_MEMBERS: hazelcast

  # User Database (Postgres)
  user-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      - user-db
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/userdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: "true"

  # Payment Database (Postgres)
  payment-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: payment
      POSTGRES_PASSWORD: paymentpass
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    depends_on:
      - payment-db
    ports:
      - "8090:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://payment-db:5432/paymentdb
      SPRING_DATASOURCE_USERNAME: payment
      SPRING_DATASOURCE_PASSWORD: paymentpass
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: "true"

  # API Gateway
  api-gateway:
    build: ./api-gateway
    depends_on:
      - inventory-service
      - booking-service
      - user-service
      - payment-service
    ports:
      - "8080:8080"

  # Authentification Database (Mongo)
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    volumes:
      - mongo_data:/data/db

  # Authentification Service
  auth-service:
    build: ./authentication
    ports:
      - "8085:8085"
    depends_on:
      - mongo
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/authentication?replicaSet=rs0
    env_file:
      - .env

volumes:
  sqlite_data:
  user_db_data:
  payment_db_data:
  mongo_data:
